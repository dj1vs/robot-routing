Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement COLON statement
Rule 2     statement -> assignment
Rule 3     statement -> declaration
Rule 4     statement -> funcall
Rule 5     statement -> control
Rule 6     statement -> return
Rule 7     statement -> prog_end
Rule 8     statement -> defun_statement
Rule 9     statement -> expression
Rule 10    statement -> block_begin
Rule 11    statement -> block_end
Rule 12    statement -> if_block_begin
Rule 13    statement -> elseif_block_begin
Rule 14    statement -> else_statement
Rule 15    statement -> case_begin
Rule 16    statement -> case_else_begin
Rule 17    args_list -> args_list COMMA expression
Rule 18    args_list -> expression
Rule 19    params_list -> params_list COMMA ID
Rule 20    params_list -> ID
Rule 21    defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression
Rule 22    funcall -> ID args_list
Rule 23    assignment -> ID EQUALS expression
Rule 24    assignment -> LET ID EQUALS expression
Rule 25    assignment -> ID LPAREN expression RPAREN EQUALS expression
Rule 26    assignment -> expression DOT ID EQUALS expression
Rule 27    declaration -> declare_array
Rule 28    declare_array -> DIM ID LPAREN expression RPAREN AS ID
Rule 29    rel_expression -> expression GREATER_THAN expression
Rule 30    rel_expression -> expression LESS_THAN expression
Rule 31    rel_expression -> expression EQUAL_GREATER_THAN expression
Rule 32    rel_expression -> expression EQUAL_LESS_THAN expression
Rule 33    rel_expression -> expression EQUALS expression
Rule 34    rel_expression -> expression NOT_EQUAL expression
Rule 35    rel_expression -> rel_expression AND rel_expression
Rule 36    rel_expression -> rel_expression OR rel_expression
Rule 37    rel_expression -> LPAREN rel_expression RPAREN
Rule 38    rel_expression -> NOT rel_expression
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression EXACTDIV expression
Rule 44    expression -> expression MOD expression
Rule 45    expression -> expression AS expression
Rule 46    expression -> expression EXP expression
Rule 47    expression -> expression DOT ID
Rule 48    expression -> MINUS expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> ID LPAREN RPAREN
Rule 51    expression -> ID LPAREN args_list RPAREN
Rule 52    expression -> INTEGER
Rule 53    expression -> DECIMAL
Rule 54    expression -> STRING
Rule 55    expression -> ID
Rule 56    expression -> LBRACE args_list RBRACE
Rule 57    block_begin -> while_block_begin
Rule 58    block_begin -> for_block_begin
Rule 59    block_begin -> do_block_begin
Rule 60    block_begin -> function_block_begin
Rule 61    if_block_begin -> IF rel_expression THEN
Rule 62    else_statement -> ELSE
Rule 63    elseif_block_begin -> ELSEIF rel_expression THEN
Rule 64    statement -> SELECT CASE expression
Rule 65    statement -> SELECT expression
Rule 66    case_begin -> CASE expression
Rule 67    case_else_begin -> CASE ELSE
Rule 68    while_block_begin -> WHILE rel_expression
Rule 69    do_block_begin -> DO
Rule 70    for_block_begin -> FOR ID EQUALS expression TO expression
Rule 71    for_block_begin -> FOR ID EQUALS expression TO expression STEP expression
Rule 72    function_block_begin -> SUB ID LPAREN params_list RPAREN
Rule 73    function_block_begin -> FUNCTION ID LPAREN params_list RPAREN
Rule 74    function_block_begin -> SUB ID LPAREN RPAREN
Rule 75    function_block_begin -> FUNCTION ID LPAREN RPAREN
Rule 76    block_end -> END IF
Rule 77    block_end -> END SELECT
Rule 78    block_end -> END WHILE
Rule 79    block_end -> WEND
Rule 80    block_end -> END FOR
Rule 81    block_end -> NEXT ID
Rule 82    block_end -> LOOP
Rule 83    block_end -> LOOP WHILE rel_expression
Rule 84    block_end -> LOOP UNTIL rel_expression
Rule 85    block_end -> END SUB
Rule 86    block_end -> END FUNCTION
Rule 87    return -> RETURN
Rule 88    return -> RETURN expression
Rule 89    prog_end -> END
Rule 90    control -> EXIT WHILE
Rule 91    control -> EXIT DO
Rule 92    control -> EXIT FOR
Rule 93    control -> CONTINUE WHILE
Rule 94    control -> CONTINUE DO
Rule 95    control -> CONTINUE FOR
Rule 96    statement -> USE ID

Terminals, with rules where they appear

AND                  : 35
AS                   : 28 45
CASE                 : 64 66 67
COLON                : 1
COMMA                : 17 19
CONTINUE             : 93 94 95
DECIMAL              : 53
DEFUN                : 21
DIM                  : 28
DIVIDE               : 42
DO                   : 69 91 94
DOT                  : 26 47
ELSE                 : 62 67
ELSEIF               : 63
END                  : 76 77 78 80 85 86 89
EQUALS               : 21 23 24 25 26 33 70 71
EQUAL_GREATER_THAN   : 31
EQUAL_LESS_THAN      : 32
EXACTDIV             : 43
EXIT                 : 90 91 92
EXP                  : 46
FOR                  : 70 71 80 92 95
FUNCTION             : 73 75 86
GREATER_THAN         : 29
ID                   : 19 20 21 22 23 24 25 26 28 28 47 50 51 55 70 71 72 73 74 75 81 96
IF                   : 61 76
INTEGER              : 52
LBRACE               : 56
LESS_THAN            : 30
LET                  : 24
LOOP                 : 82 83 84
LPAREN               : 21 25 28 37 49 50 51 72 73 74 75
MINUS                : 40 48
MOD                  : 44
NEXT                 : 81
NOT                  : 38
NOT_EQUAL            : 34
OR                   : 36
PLUS                 : 39
RBRACE               : 56
RETURN               : 87 88
RPAREN               : 21 25 28 37 49 50 51 72 73 74 75
SELECT               : 64 65 77
STEP                 : 71
STRING               : 54
SUB                  : 72 74 85
THEN                 : 61 63
TIMES                : 41
TO                   : 70 71
UNTIL                : 84
USE                  : 96
WEND                 : 79
WHILE                : 68 78 83 90 93
error                : 

Nonterminals, with rules where they appear

args_list            : 17 22 51 56
assignment           : 2
block_begin          : 10
block_end            : 11
case_begin           : 15
case_else_begin      : 16
control              : 5
declaration          : 3
declare_array        : 27
defun_statement      : 8
do_block_begin       : 59
else_statement       : 14
elseif_block_begin   : 13
expression           : 9 17 18 21 23 24 25 25 26 26 28 29 29 30 30 31 31 32 32 33 33 34 34 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 49 64 65 66 70 70 71 71 71 88
for_block_begin      : 58
funcall              : 4
function_block_begin : 60
if_block_begin       : 12
params_list          : 19 21 72 73
prog_end             : 7
rel_expression       : 35 35 36 36 37 38 61 63 68 83 84
return               : 6
statement            : 1 1 0
while_block_begin    : 57

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement COLON statement
    (2) statement -> . assignment
    (3) statement -> . declaration
    (4) statement -> . funcall
    (5) statement -> . control
    (6) statement -> . return
    (7) statement -> . prog_end
    (8) statement -> . defun_statement
    (9) statement -> . expression
    (10) statement -> . block_begin
    (11) statement -> . block_end
    (12) statement -> . if_block_begin
    (13) statement -> . elseif_block_begin
    (14) statement -> . else_statement
    (15) statement -> . case_begin
    (16) statement -> . case_else_begin
    (64) statement -> . SELECT CASE expression
    (65) statement -> . SELECT expression
    (96) statement -> . USE ID
    (23) assignment -> . ID EQUALS expression
    (24) assignment -> . LET ID EQUALS expression
    (25) assignment -> . ID LPAREN expression RPAREN EQUALS expression
    (26) assignment -> . expression DOT ID EQUALS expression
    (27) declaration -> . declare_array
    (22) funcall -> . ID args_list
    (90) control -> . EXIT WHILE
    (91) control -> . EXIT DO
    (92) control -> . EXIT FOR
    (93) control -> . CONTINUE WHILE
    (94) control -> . CONTINUE DO
    (95) control -> . CONTINUE FOR
    (87) return -> . RETURN
    (88) return -> . RETURN expression
    (89) prog_end -> . END
    (21) defun_statement -> . DEFUN ID LPAREN params_list RPAREN EQUALS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE
    (57) block_begin -> . while_block_begin
    (58) block_begin -> . for_block_begin
    (59) block_begin -> . do_block_begin
    (60) block_begin -> . function_block_begin
    (76) block_end -> . END IF
    (77) block_end -> . END SELECT
    (78) block_end -> . END WHILE
    (79) block_end -> . WEND
    (80) block_end -> . END FOR
    (81) block_end -> . NEXT ID
    (82) block_end -> . LOOP
    (83) block_end -> . LOOP WHILE rel_expression
    (84) block_end -> . LOOP UNTIL rel_expression
    (85) block_end -> . END SUB
    (86) block_end -> . END FUNCTION
    (61) if_block_begin -> . IF rel_expression THEN
    (63) elseif_block_begin -> . ELSEIF rel_expression THEN
    (62) else_statement -> . ELSE
    (66) case_begin -> . CASE expression
    (67) case_else_begin -> . CASE ELSE
    (28) declare_array -> . DIM ID LPAREN expression RPAREN AS ID
    (68) while_block_begin -> . WHILE rel_expression
    (70) for_block_begin -> . FOR ID EQUALS expression TO expression
    (71) for_block_begin -> . FOR ID EQUALS expression TO expression STEP expression
    (69) do_block_begin -> . DO
    (72) function_block_begin -> . SUB ID LPAREN params_list RPAREN
    (73) function_block_begin -> . FUNCTION ID LPAREN params_list RPAREN
    (74) function_block_begin -> . SUB ID LPAREN RPAREN
    (75) function_block_begin -> . FUNCTION ID LPAREN RPAREN

    SELECT          shift and go to state 17
    USE             shift and go to state 19
    ID              shift and go to state 20
    LET             shift and go to state 21
    EXIT            shift and go to state 24
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    END             shift and go to state 30
    DEFUN           shift and go to state 31
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36
    WEND            shift and go to state 42
    NEXT            shift and go to state 43
    LOOP            shift and go to state 44
    IF              shift and go to state 41
    ELSEIF          shift and go to state 47
    ELSE            shift and go to state 48
    CASE            shift and go to state 18
    DIM             shift and go to state 49
    WHILE           shift and go to state 25
    FOR             shift and go to state 27
    DO              shift and go to state 26
    SUB             shift and go to state 45
    FUNCTION        shift and go to state 46

    statement                      shift and go to state 1
    assignment                     shift and go to state 2
    declaration                    shift and go to state 3
    funcall                        shift and go to state 4
    control                        shift and go to state 5
    return                         shift and go to state 6
    prog_end                       shift and go to state 7
    defun_statement                shift and go to state 8
    expression                     shift and go to state 9
    block_begin                    shift and go to state 10
    block_end                      shift and go to state 11
    if_block_begin                 shift and go to state 12
    elseif_block_begin             shift and go to state 13
    else_statement                 shift and go to state 14
    case_begin                     shift and go to state 15
    case_else_begin                shift and go to state 16
    declare_array                  shift and go to state 23
    while_block_begin              shift and go to state 37
    for_block_begin                shift and go to state 38
    do_block_begin                 shift and go to state 39
    function_block_begin           shift and go to state 40

state 1

    (0) S' -> statement .
    (1) statement -> statement . COLON statement

    COLON           shift and go to state 50


state 2

    (2) statement -> assignment .

    COLON           reduce using rule 2 (statement -> assignment .)
    $end            reduce using rule 2 (statement -> assignment .)


state 3

    (3) statement -> declaration .

    COLON           reduce using rule 3 (statement -> declaration .)
    $end            reduce using rule 3 (statement -> declaration .)


state 4

    (4) statement -> funcall .

    COLON           reduce using rule 4 (statement -> funcall .)
    $end            reduce using rule 4 (statement -> funcall .)


state 5

    (5) statement -> control .

    COLON           reduce using rule 5 (statement -> control .)
    $end            reduce using rule 5 (statement -> control .)


state 6

    (6) statement -> return .

    COLON           reduce using rule 6 (statement -> return .)
    $end            reduce using rule 6 (statement -> return .)


state 7

    (7) statement -> prog_end .

    COLON           reduce using rule 7 (statement -> prog_end .)
    $end            reduce using rule 7 (statement -> prog_end .)


state 8

    (8) statement -> defun_statement .

    COLON           reduce using rule 8 (statement -> defun_statement .)
    $end            reduce using rule 8 (statement -> defun_statement .)


state 9

    (9) statement -> expression .
    (26) assignment -> expression . DOT ID EQUALS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    DOT             shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59


state 10

    (10) statement -> block_begin .

    COLON           reduce using rule 10 (statement -> block_begin .)
    $end            reduce using rule 10 (statement -> block_begin .)


state 11

    (11) statement -> block_end .

    COLON           reduce using rule 11 (statement -> block_end .)
    $end            reduce using rule 11 (statement -> block_end .)


state 12

    (12) statement -> if_block_begin .

    COLON           reduce using rule 12 (statement -> if_block_begin .)
    $end            reduce using rule 12 (statement -> if_block_begin .)


state 13

    (13) statement -> elseif_block_begin .

    COLON           reduce using rule 13 (statement -> elseif_block_begin .)
    $end            reduce using rule 13 (statement -> elseif_block_begin .)


state 14

    (14) statement -> else_statement .

    COLON           reduce using rule 14 (statement -> else_statement .)
    $end            reduce using rule 14 (statement -> else_statement .)


state 15

    (15) statement -> case_begin .

    COLON           reduce using rule 15 (statement -> case_begin .)
    $end            reduce using rule 15 (statement -> case_begin .)


state 16

    (16) statement -> case_else_begin .

    COLON           reduce using rule 16 (statement -> case_else_begin .)
    $end            reduce using rule 16 (statement -> case_else_begin .)


state 17

    (64) statement -> SELECT . CASE expression
    (65) statement -> SELECT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    CASE            shift and go to state 60
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 61

state 18

    (66) case_begin -> CASE . expression
    (67) case_else_begin -> CASE . ELSE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    ELSE            shift and go to state 64
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 63

state 19

    (96) statement -> USE . ID

    ID              shift and go to state 65


state 20

    (23) assignment -> ID . EQUALS expression
    (25) assignment -> ID . LPAREN expression RPAREN EQUALS expression
    (22) funcall -> ID . args_list
    (50) expression -> ID . LPAREN RPAREN
    (51) expression -> ID . LPAREN args_list RPAREN
    (55) expression -> ID .
    (17) args_list -> . args_list COMMA expression
    (18) args_list -> . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

  ! shift/reduce conflict for MINUS resolved as shift
    EQUALS          shift and go to state 66
    LPAREN          shift and go to state 68
    DOT             reduce using rule 55 (expression -> ID .)
    PLUS            reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    EXACTDIV        reduce using rule 55 (expression -> ID .)
    MOD             reduce using rule 55 (expression -> ID .)
    AS              reduce using rule 55 (expression -> ID .)
    EXP             reduce using rule 55 (expression -> ID .)
    COLON           reduce using rule 55 (expression -> ID .)
    $end            reduce using rule 55 (expression -> ID .)
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

  ! MINUS           [ reduce using rule 55 (expression -> ID .) ]

    expression                     shift and go to state 67
    args_list                      shift and go to state 69

state 21

    (24) assignment -> LET . ID EQUALS expression

    ID              shift and go to state 70


state 22

    (49) expression -> LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 71

state 23

    (27) declaration -> declare_array .

    COLON           reduce using rule 27 (declaration -> declare_array .)
    $end            reduce using rule 27 (declaration -> declare_array .)


state 24

    (90) control -> EXIT . WHILE
    (91) control -> EXIT . DO
    (92) control -> EXIT . FOR

    WHILE           shift and go to state 72
    DO              shift and go to state 73
    FOR             shift and go to state 74


state 25

    (68) while_block_begin -> WHILE . rel_expression
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 75
    expression                     shift and go to state 76

state 26

    (69) do_block_begin -> DO .

    COLON           reduce using rule 69 (do_block_begin -> DO .)
    $end            reduce using rule 69 (do_block_begin -> DO .)


state 27

    (70) for_block_begin -> FOR . ID EQUALS expression TO expression
    (71) for_block_begin -> FOR . ID EQUALS expression TO expression STEP expression

    ID              shift and go to state 79


state 28

    (93) control -> CONTINUE . WHILE
    (94) control -> CONTINUE . DO
    (95) control -> CONTINUE . FOR

    WHILE           shift and go to state 80
    DO              shift and go to state 81
    FOR             shift and go to state 82


state 29

    (87) return -> RETURN .
    (88) return -> RETURN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    COLON           reduce using rule 87 (return -> RETURN .)
    $end            reduce using rule 87 (return -> RETURN .)
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 83

state 30

    (89) prog_end -> END .
    (76) block_end -> END . IF
    (77) block_end -> END . SELECT
    (78) block_end -> END . WHILE
    (80) block_end -> END . FOR
    (85) block_end -> END . SUB
    (86) block_end -> END . FUNCTION

    COLON           reduce using rule 89 (prog_end -> END .)
    $end            reduce using rule 89 (prog_end -> END .)
    IF              shift and go to state 84
    SELECT          shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    SUB             shift and go to state 88
    FUNCTION        shift and go to state 89


state 31

    (21) defun_statement -> DEFUN . ID LPAREN params_list RPAREN EQUALS expression

    ID              shift and go to state 90


state 32

    (48) expression -> MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 91

state 33

    (52) expression -> INTEGER .

    DOT             reduce using rule 52 (expression -> INTEGER .)
    PLUS            reduce using rule 52 (expression -> INTEGER .)
    MINUS           reduce using rule 52 (expression -> INTEGER .)
    TIMES           reduce using rule 52 (expression -> INTEGER .)
    DIVIDE          reduce using rule 52 (expression -> INTEGER .)
    EXACTDIV        reduce using rule 52 (expression -> INTEGER .)
    MOD             reduce using rule 52 (expression -> INTEGER .)
    AS              reduce using rule 52 (expression -> INTEGER .)
    EXP             reduce using rule 52 (expression -> INTEGER .)
    COLON           reduce using rule 52 (expression -> INTEGER .)
    $end            reduce using rule 52 (expression -> INTEGER .)
    COMMA           reduce using rule 52 (expression -> INTEGER .)
    RPAREN          reduce using rule 52 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 52 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 52 (expression -> INTEGER .)
    EQUAL_GREATER_THAN reduce using rule 52 (expression -> INTEGER .)
    EQUAL_LESS_THAN reduce using rule 52 (expression -> INTEGER .)
    EQUALS          reduce using rule 52 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 52 (expression -> INTEGER .)
    RBRACE          reduce using rule 52 (expression -> INTEGER .)
    AND             reduce using rule 52 (expression -> INTEGER .)
    OR              reduce using rule 52 (expression -> INTEGER .)
    THEN            reduce using rule 52 (expression -> INTEGER .)
    TO              reduce using rule 52 (expression -> INTEGER .)
    STEP            reduce using rule 52 (expression -> INTEGER .)


state 34

    (53) expression -> DECIMAL .

    DOT             reduce using rule 53 (expression -> DECIMAL .)
    PLUS            reduce using rule 53 (expression -> DECIMAL .)
    MINUS           reduce using rule 53 (expression -> DECIMAL .)
    TIMES           reduce using rule 53 (expression -> DECIMAL .)
    DIVIDE          reduce using rule 53 (expression -> DECIMAL .)
    EXACTDIV        reduce using rule 53 (expression -> DECIMAL .)
    MOD             reduce using rule 53 (expression -> DECIMAL .)
    AS              reduce using rule 53 (expression -> DECIMAL .)
    EXP             reduce using rule 53 (expression -> DECIMAL .)
    COLON           reduce using rule 53 (expression -> DECIMAL .)
    $end            reduce using rule 53 (expression -> DECIMAL .)
    COMMA           reduce using rule 53 (expression -> DECIMAL .)
    RPAREN          reduce using rule 53 (expression -> DECIMAL .)
    GREATER_THAN    reduce using rule 53 (expression -> DECIMAL .)
    LESS_THAN       reduce using rule 53 (expression -> DECIMAL .)
    EQUAL_GREATER_THAN reduce using rule 53 (expression -> DECIMAL .)
    EQUAL_LESS_THAN reduce using rule 53 (expression -> DECIMAL .)
    EQUALS          reduce using rule 53 (expression -> DECIMAL .)
    NOT_EQUAL       reduce using rule 53 (expression -> DECIMAL .)
    RBRACE          reduce using rule 53 (expression -> DECIMAL .)
    AND             reduce using rule 53 (expression -> DECIMAL .)
    OR              reduce using rule 53 (expression -> DECIMAL .)
    THEN            reduce using rule 53 (expression -> DECIMAL .)
    TO              reduce using rule 53 (expression -> DECIMAL .)
    STEP            reduce using rule 53 (expression -> DECIMAL .)


state 35

    (54) expression -> STRING .

    DOT             reduce using rule 54 (expression -> STRING .)
    PLUS            reduce using rule 54 (expression -> STRING .)
    MINUS           reduce using rule 54 (expression -> STRING .)
    TIMES           reduce using rule 54 (expression -> STRING .)
    DIVIDE          reduce using rule 54 (expression -> STRING .)
    EXACTDIV        reduce using rule 54 (expression -> STRING .)
    MOD             reduce using rule 54 (expression -> STRING .)
    AS              reduce using rule 54 (expression -> STRING .)
    EXP             reduce using rule 54 (expression -> STRING .)
    COLON           reduce using rule 54 (expression -> STRING .)
    $end            reduce using rule 54 (expression -> STRING .)
    COMMA           reduce using rule 54 (expression -> STRING .)
    RPAREN          reduce using rule 54 (expression -> STRING .)
    GREATER_THAN    reduce using rule 54 (expression -> STRING .)
    LESS_THAN       reduce using rule 54 (expression -> STRING .)
    EQUAL_GREATER_THAN reduce using rule 54 (expression -> STRING .)
    EQUAL_LESS_THAN reduce using rule 54 (expression -> STRING .)
    EQUALS          reduce using rule 54 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 54 (expression -> STRING .)
    RBRACE          reduce using rule 54 (expression -> STRING .)
    AND             reduce using rule 54 (expression -> STRING .)
    OR              reduce using rule 54 (expression -> STRING .)
    THEN            reduce using rule 54 (expression -> STRING .)
    TO              reduce using rule 54 (expression -> STRING .)
    STEP            reduce using rule 54 (expression -> STRING .)


state 36

    (56) expression -> LBRACE . args_list RBRACE
    (17) args_list -> . args_list COMMA expression
    (18) args_list -> . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    args_list                      shift and go to state 92
    expression                     shift and go to state 67

state 37

    (57) block_begin -> while_block_begin .

    COLON           reduce using rule 57 (block_begin -> while_block_begin .)
    $end            reduce using rule 57 (block_begin -> while_block_begin .)


state 38

    (58) block_begin -> for_block_begin .

    COLON           reduce using rule 58 (block_begin -> for_block_begin .)
    $end            reduce using rule 58 (block_begin -> for_block_begin .)


state 39

    (59) block_begin -> do_block_begin .

    COLON           reduce using rule 59 (block_begin -> do_block_begin .)
    $end            reduce using rule 59 (block_begin -> do_block_begin .)


state 40

    (60) block_begin -> function_block_begin .

    COLON           reduce using rule 60 (block_begin -> function_block_begin .)
    $end            reduce using rule 60 (block_begin -> function_block_begin .)


state 41

    (61) if_block_begin -> IF . rel_expression THEN
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 93
    expression                     shift and go to state 76

state 42

    (79) block_end -> WEND .

    COLON           reduce using rule 79 (block_end -> WEND .)
    $end            reduce using rule 79 (block_end -> WEND .)


state 43

    (81) block_end -> NEXT . ID

    ID              shift and go to state 94


state 44

    (82) block_end -> LOOP .
    (83) block_end -> LOOP . WHILE rel_expression
    (84) block_end -> LOOP . UNTIL rel_expression

    COLON           reduce using rule 82 (block_end -> LOOP .)
    $end            reduce using rule 82 (block_end -> LOOP .)
    WHILE           shift and go to state 95
    UNTIL           shift and go to state 96


state 45

    (72) function_block_begin -> SUB . ID LPAREN params_list RPAREN
    (74) function_block_begin -> SUB . ID LPAREN RPAREN

    ID              shift and go to state 97


state 46

    (73) function_block_begin -> FUNCTION . ID LPAREN params_list RPAREN
    (75) function_block_begin -> FUNCTION . ID LPAREN RPAREN

    ID              shift and go to state 98


state 47

    (63) elseif_block_begin -> ELSEIF . rel_expression THEN
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 99
    expression                     shift and go to state 76

state 48

    (62) else_statement -> ELSE .

    COLON           reduce using rule 62 (else_statement -> ELSE .)
    $end            reduce using rule 62 (else_statement -> ELSE .)


state 49

    (28) declare_array -> DIM . ID LPAREN expression RPAREN AS ID

    ID              shift and go to state 100


state 50

    (1) statement -> statement COLON . statement
    (1) statement -> . statement COLON statement
    (2) statement -> . assignment
    (3) statement -> . declaration
    (4) statement -> . funcall
    (5) statement -> . control
    (6) statement -> . return
    (7) statement -> . prog_end
    (8) statement -> . defun_statement
    (9) statement -> . expression
    (10) statement -> . block_begin
    (11) statement -> . block_end
    (12) statement -> . if_block_begin
    (13) statement -> . elseif_block_begin
    (14) statement -> . else_statement
    (15) statement -> . case_begin
    (16) statement -> . case_else_begin
    (64) statement -> . SELECT CASE expression
    (65) statement -> . SELECT expression
    (96) statement -> . USE ID
    (23) assignment -> . ID EQUALS expression
    (24) assignment -> . LET ID EQUALS expression
    (25) assignment -> . ID LPAREN expression RPAREN EQUALS expression
    (26) assignment -> . expression DOT ID EQUALS expression
    (27) declaration -> . declare_array
    (22) funcall -> . ID args_list
    (90) control -> . EXIT WHILE
    (91) control -> . EXIT DO
    (92) control -> . EXIT FOR
    (93) control -> . CONTINUE WHILE
    (94) control -> . CONTINUE DO
    (95) control -> . CONTINUE FOR
    (87) return -> . RETURN
    (88) return -> . RETURN expression
    (89) prog_end -> . END
    (21) defun_statement -> . DEFUN ID LPAREN params_list RPAREN EQUALS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE
    (57) block_begin -> . while_block_begin
    (58) block_begin -> . for_block_begin
    (59) block_begin -> . do_block_begin
    (60) block_begin -> . function_block_begin
    (76) block_end -> . END IF
    (77) block_end -> . END SELECT
    (78) block_end -> . END WHILE
    (79) block_end -> . WEND
    (80) block_end -> . END FOR
    (81) block_end -> . NEXT ID
    (82) block_end -> . LOOP
    (83) block_end -> . LOOP WHILE rel_expression
    (84) block_end -> . LOOP UNTIL rel_expression
    (85) block_end -> . END SUB
    (86) block_end -> . END FUNCTION
    (61) if_block_begin -> . IF rel_expression THEN
    (63) elseif_block_begin -> . ELSEIF rel_expression THEN
    (62) else_statement -> . ELSE
    (66) case_begin -> . CASE expression
    (67) case_else_begin -> . CASE ELSE
    (28) declare_array -> . DIM ID LPAREN expression RPAREN AS ID
    (68) while_block_begin -> . WHILE rel_expression
    (70) for_block_begin -> . FOR ID EQUALS expression TO expression
    (71) for_block_begin -> . FOR ID EQUALS expression TO expression STEP expression
    (69) do_block_begin -> . DO
    (72) function_block_begin -> . SUB ID LPAREN params_list RPAREN
    (73) function_block_begin -> . FUNCTION ID LPAREN params_list RPAREN
    (74) function_block_begin -> . SUB ID LPAREN RPAREN
    (75) function_block_begin -> . FUNCTION ID LPAREN RPAREN

    SELECT          shift and go to state 17
    USE             shift and go to state 19
    ID              shift and go to state 20
    LET             shift and go to state 21
    EXIT            shift and go to state 24
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    END             shift and go to state 30
    DEFUN           shift and go to state 31
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36
    WEND            shift and go to state 42
    NEXT            shift and go to state 43
    LOOP            shift and go to state 44
    IF              shift and go to state 41
    ELSEIF          shift and go to state 47
    ELSE            shift and go to state 48
    CASE            shift and go to state 18
    DIM             shift and go to state 49
    WHILE           shift and go to state 25
    FOR             shift and go to state 27
    DO              shift and go to state 26
    SUB             shift and go to state 45
    FUNCTION        shift and go to state 46

    statement                      shift and go to state 101
    assignment                     shift and go to state 2
    declaration                    shift and go to state 3
    funcall                        shift and go to state 4
    control                        shift and go to state 5
    return                         shift and go to state 6
    prog_end                       shift and go to state 7
    defun_statement                shift and go to state 8
    expression                     shift and go to state 9
    block_begin                    shift and go to state 10
    block_end                      shift and go to state 11
    if_block_begin                 shift and go to state 12
    elseif_block_begin             shift and go to state 13
    else_statement                 shift and go to state 14
    case_begin                     shift and go to state 15
    case_else_begin                shift and go to state 16
    declare_array                  shift and go to state 23
    while_block_begin              shift and go to state 37
    for_block_begin                shift and go to state 38
    do_block_begin                 shift and go to state 39
    function_block_begin           shift and go to state 40

state 51

    (26) assignment -> expression DOT . ID EQUALS expression
    (47) expression -> expression DOT . ID

    ID              shift and go to state 102


state 52

    (39) expression -> expression PLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 103

state 53

    (40) expression -> expression MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 104

state 54

    (41) expression -> expression TIMES . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 105

state 55

    (42) expression -> expression DIVIDE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 106

state 56

    (43) expression -> expression EXACTDIV . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 107

state 57

    (44) expression -> expression MOD . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 108

state 58

    (45) expression -> expression AS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 109

state 59

    (46) expression -> expression EXP . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 110

state 60

    (64) statement -> SELECT CASE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 111

state 61

    (65) statement -> SELECT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 65 (statement -> SELECT expression .)
    $end            reduce using rule 65 (statement -> SELECT expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 62

    (50) expression -> ID . LPAREN RPAREN
    (51) expression -> ID . LPAREN args_list RPAREN
    (55) expression -> ID .

    LPAREN          shift and go to state 113
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    EXACTDIV        reduce using rule 55 (expression -> ID .)
    MOD             reduce using rule 55 (expression -> ID .)
    AS              reduce using rule 55 (expression -> ID .)
    EXP             reduce using rule 55 (expression -> ID .)
    DOT             reduce using rule 55 (expression -> ID .)
    COLON           reduce using rule 55 (expression -> ID .)
    $end            reduce using rule 55 (expression -> ID .)
    COMMA           reduce using rule 55 (expression -> ID .)
    RPAREN          reduce using rule 55 (expression -> ID .)
    GREATER_THAN    reduce using rule 55 (expression -> ID .)
    LESS_THAN       reduce using rule 55 (expression -> ID .)
    EQUAL_GREATER_THAN reduce using rule 55 (expression -> ID .)
    EQUAL_LESS_THAN reduce using rule 55 (expression -> ID .)
    EQUALS          reduce using rule 55 (expression -> ID .)
    NOT_EQUAL       reduce using rule 55 (expression -> ID .)
    RBRACE          reduce using rule 55 (expression -> ID .)
    AND             reduce using rule 55 (expression -> ID .)
    OR              reduce using rule 55 (expression -> ID .)
    THEN            reduce using rule 55 (expression -> ID .)
    TO              reduce using rule 55 (expression -> ID .)
    STEP            reduce using rule 55 (expression -> ID .)


state 63

    (66) case_begin -> CASE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 66 (case_begin -> CASE expression .)
    $end            reduce using rule 66 (case_begin -> CASE expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 64

    (67) case_else_begin -> CASE ELSE .

    COLON           reduce using rule 67 (case_else_begin -> CASE ELSE .)
    $end            reduce using rule 67 (case_else_begin -> CASE ELSE .)


state 65

    (96) statement -> USE ID .

    COLON           reduce using rule 96 (statement -> USE ID .)
    $end            reduce using rule 96 (statement -> USE ID .)


state 66

    (23) assignment -> ID EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 114

state 67

    (18) args_list -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COMMA           reduce using rule 18 (args_list -> expression .)
    COLON           reduce using rule 18 (args_list -> expression .)
    $end            reduce using rule 18 (args_list -> expression .)
    RBRACE          reduce using rule 18 (args_list -> expression .)
    RPAREN          reduce using rule 18 (args_list -> expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 68

    (25) assignment -> ID LPAREN . expression RPAREN EQUALS expression
    (50) expression -> ID LPAREN . RPAREN
    (51) expression -> ID LPAREN . args_list RPAREN
    (49) expression -> LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE
    (17) args_list -> . args_list COMMA expression
    (18) args_list -> . expression

    RPAREN          shift and go to state 116
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 115
    args_list                      shift and go to state 117

state 69

    (22) funcall -> ID args_list .
    (17) args_list -> args_list . COMMA expression

    COLON           reduce using rule 22 (funcall -> ID args_list .)
    $end            reduce using rule 22 (funcall -> ID args_list .)
    COMMA           shift and go to state 118


state 70

    (24) assignment -> LET ID . EQUALS expression

    EQUALS          shift and go to state 119


state 71

    (49) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    RPAREN          shift and go to state 120
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 72

    (90) control -> EXIT WHILE .

    COLON           reduce using rule 90 (control -> EXIT WHILE .)
    $end            reduce using rule 90 (control -> EXIT WHILE .)


state 73

    (91) control -> EXIT DO .

    COLON           reduce using rule 91 (control -> EXIT DO .)
    $end            reduce using rule 91 (control -> EXIT DO .)


state 74

    (92) control -> EXIT FOR .

    COLON           reduce using rule 92 (control -> EXIT FOR .)
    $end            reduce using rule 92 (control -> EXIT FOR .)


state 75

    (68) while_block_begin -> WHILE rel_expression .
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 68 (while_block_begin -> WHILE rel_expression .)
    $end            reduce using rule 68 (while_block_begin -> WHILE rel_expression .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 76

    (29) rel_expression -> expression . GREATER_THAN expression
    (30) rel_expression -> expression . LESS_THAN expression
    (31) rel_expression -> expression . EQUAL_GREATER_THAN expression
    (32) rel_expression -> expression . EQUAL_LESS_THAN expression
    (33) rel_expression -> expression . EQUALS expression
    (34) rel_expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    GREATER_THAN    shift and go to state 123
    LESS_THAN       shift and go to state 124
    EQUAL_GREATER_THAN shift and go to state 125
    EQUAL_LESS_THAN shift and go to state 126
    EQUALS          shift and go to state 127
    NOT_EQUAL       shift and go to state 128
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 77

    (37) rel_expression -> LPAREN . rel_expression RPAREN
    (49) expression -> LPAREN . expression RPAREN
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 129
    expression                     shift and go to state 130

state 78

    (38) rel_expression -> NOT . rel_expression
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 131
    expression                     shift and go to state 76

state 79

    (70) for_block_begin -> FOR ID . EQUALS expression TO expression
    (71) for_block_begin -> FOR ID . EQUALS expression TO expression STEP expression

    EQUALS          shift and go to state 132


state 80

    (93) control -> CONTINUE WHILE .

    COLON           reduce using rule 93 (control -> CONTINUE WHILE .)
    $end            reduce using rule 93 (control -> CONTINUE WHILE .)


state 81

    (94) control -> CONTINUE DO .

    COLON           reduce using rule 94 (control -> CONTINUE DO .)
    $end            reduce using rule 94 (control -> CONTINUE DO .)


state 82

    (95) control -> CONTINUE FOR .

    COLON           reduce using rule 95 (control -> CONTINUE FOR .)
    $end            reduce using rule 95 (control -> CONTINUE FOR .)


state 83

    (88) return -> RETURN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 88 (return -> RETURN expression .)
    $end            reduce using rule 88 (return -> RETURN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 84

    (76) block_end -> END IF .

    COLON           reduce using rule 76 (block_end -> END IF .)
    $end            reduce using rule 76 (block_end -> END IF .)


state 85

    (77) block_end -> END SELECT .

    COLON           reduce using rule 77 (block_end -> END SELECT .)
    $end            reduce using rule 77 (block_end -> END SELECT .)


state 86

    (78) block_end -> END WHILE .

    COLON           reduce using rule 78 (block_end -> END WHILE .)
    $end            reduce using rule 78 (block_end -> END WHILE .)


state 87

    (80) block_end -> END FOR .

    COLON           reduce using rule 80 (block_end -> END FOR .)
    $end            reduce using rule 80 (block_end -> END FOR .)


state 88

    (85) block_end -> END SUB .

    COLON           reduce using rule 85 (block_end -> END SUB .)
    $end            reduce using rule 85 (block_end -> END SUB .)


state 89

    (86) block_end -> END FUNCTION .

    COLON           reduce using rule 86 (block_end -> END FUNCTION .)
    $end            reduce using rule 86 (block_end -> END FUNCTION .)


state 90

    (21) defun_statement -> DEFUN ID . LPAREN params_list RPAREN EQUALS expression

    LPAREN          shift and go to state 133


state 91

    (48) expression -> MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 48 (expression -> MINUS expression .)
    MINUS           reduce using rule 48 (expression -> MINUS expression .)
    TIMES           reduce using rule 48 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 48 (expression -> MINUS expression .)
    EXACTDIV        reduce using rule 48 (expression -> MINUS expression .)
    MOD             reduce using rule 48 (expression -> MINUS expression .)
    AS              reduce using rule 48 (expression -> MINUS expression .)
    EXP             reduce using rule 48 (expression -> MINUS expression .)
    COLON           reduce using rule 48 (expression -> MINUS expression .)
    $end            reduce using rule 48 (expression -> MINUS expression .)
    COMMA           reduce using rule 48 (expression -> MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 48 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 48 (expression -> MINUS expression .)
    EQUAL_GREATER_THAN reduce using rule 48 (expression -> MINUS expression .)
    EQUAL_LESS_THAN reduce using rule 48 (expression -> MINUS expression .)
    EQUALS          reduce using rule 48 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> MINUS expression .)
    RBRACE          reduce using rule 48 (expression -> MINUS expression .)
    AND             reduce using rule 48 (expression -> MINUS expression .)
    OR              reduce using rule 48 (expression -> MINUS expression .)
    THEN            reduce using rule 48 (expression -> MINUS expression .)
    TO              reduce using rule 48 (expression -> MINUS expression .)
    STEP            reduce using rule 48 (expression -> MINUS expression .)
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 48 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! EXACTDIV        [ shift and go to state 56 ]
  ! MOD             [ shift and go to state 57 ]
  ! AS              [ shift and go to state 58 ]
  ! EXP             [ shift and go to state 59 ]


state 92

    (56) expression -> LBRACE args_list . RBRACE
    (17) args_list -> args_list . COMMA expression

    RBRACE          shift and go to state 134
    COMMA           shift and go to state 118


state 93

    (61) if_block_begin -> IF rel_expression . THEN
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    THEN            shift and go to state 135
    AND             shift and go to state 121
    OR              shift and go to state 122


state 94

    (81) block_end -> NEXT ID .

    COLON           reduce using rule 81 (block_end -> NEXT ID .)
    $end            reduce using rule 81 (block_end -> NEXT ID .)


state 95

    (83) block_end -> LOOP WHILE . rel_expression
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 136
    expression                     shift and go to state 76

state 96

    (84) block_end -> LOOP UNTIL . rel_expression
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 137
    expression                     shift and go to state 76

state 97

    (72) function_block_begin -> SUB ID . LPAREN params_list RPAREN
    (74) function_block_begin -> SUB ID . LPAREN RPAREN

    LPAREN          shift and go to state 138


state 98

    (73) function_block_begin -> FUNCTION ID . LPAREN params_list RPAREN
    (75) function_block_begin -> FUNCTION ID . LPAREN RPAREN

    LPAREN          shift and go to state 139


state 99

    (63) elseif_block_begin -> ELSEIF rel_expression . THEN
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    THEN            shift and go to state 140
    AND             shift and go to state 121
    OR              shift and go to state 122


state 100

    (28) declare_array -> DIM ID . LPAREN expression RPAREN AS ID

    LPAREN          shift and go to state 141


state 101

    (1) statement -> statement COLON statement .
    (1) statement -> statement . COLON statement

    COLON           reduce using rule 1 (statement -> statement COLON statement .)
    $end            reduce using rule 1 (statement -> statement COLON statement .)

  ! COLON           [ shift and go to state 50 ]


state 102

    (26) assignment -> expression DOT ID . EQUALS expression
    (47) expression -> expression DOT ID .

    EQUALS          shift and go to state 142
    DOT             reduce using rule 47 (expression -> expression DOT ID .)
    PLUS            reduce using rule 47 (expression -> expression DOT ID .)
    MINUS           reduce using rule 47 (expression -> expression DOT ID .)
    TIMES           reduce using rule 47 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 47 (expression -> expression DOT ID .)
    EXACTDIV        reduce using rule 47 (expression -> expression DOT ID .)
    MOD             reduce using rule 47 (expression -> expression DOT ID .)
    AS              reduce using rule 47 (expression -> expression DOT ID .)
    EXP             reduce using rule 47 (expression -> expression DOT ID .)
    COLON           reduce using rule 47 (expression -> expression DOT ID .)
    $end            reduce using rule 47 (expression -> expression DOT ID .)


state 103

    (39) expression -> expression PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 39 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 39 (expression -> expression PLUS expression .)
    AS              reduce using rule 39 (expression -> expression PLUS expression .)
    COLON           reduce using rule 39 (expression -> expression PLUS expression .)
    $end            reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 39 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 39 (expression -> expression PLUS expression .)
    EQUAL_GREATER_THAN reduce using rule 39 (expression -> expression PLUS expression .)
    EQUAL_LESS_THAN reduce using rule 39 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 39 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 39 (expression -> expression PLUS expression .)
    AND             reduce using rule 39 (expression -> expression PLUS expression .)
    OR              reduce using rule 39 (expression -> expression PLUS expression .)
    THEN            reduce using rule 39 (expression -> expression PLUS expression .)
    TO              reduce using rule 39 (expression -> expression PLUS expression .)
    STEP            reduce using rule 39 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    EXP             shift and go to state 59
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! EXACTDIV        [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! EXP             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 58 ]


state 104

    (40) expression -> expression MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 40 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 40 (expression -> expression MINUS expression .)
    AS              reduce using rule 40 (expression -> expression MINUS expression .)
    COLON           reduce using rule 40 (expression -> expression MINUS expression .)
    $end            reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 40 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 40 (expression -> expression MINUS expression .)
    EQUAL_GREATER_THAN reduce using rule 40 (expression -> expression MINUS expression .)
    EQUAL_LESS_THAN reduce using rule 40 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 40 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 40 (expression -> expression MINUS expression .)
    AND             reduce using rule 40 (expression -> expression MINUS expression .)
    OR              reduce using rule 40 (expression -> expression MINUS expression .)
    THEN            reduce using rule 40 (expression -> expression MINUS expression .)
    TO              reduce using rule 40 (expression -> expression MINUS expression .)
    STEP            reduce using rule 40 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    EXP             shift and go to state 59
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! EXACTDIV        [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 58 ]


state 105

    (41) expression -> expression TIMES expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 41 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 41 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 41 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 41 (expression -> expression TIMES expression .)
    EXACTDIV        reduce using rule 41 (expression -> expression TIMES expression .)
    MOD             reduce using rule 41 (expression -> expression TIMES expression .)
    AS              reduce using rule 41 (expression -> expression TIMES expression .)
    COLON           reduce using rule 41 (expression -> expression TIMES expression .)
    $end            reduce using rule 41 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 41 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 41 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 41 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 41 (expression -> expression TIMES expression .)
    EQUAL_GREATER_THAN reduce using rule 41 (expression -> expression TIMES expression .)
    EQUAL_LESS_THAN reduce using rule 41 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 41 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 41 (expression -> expression TIMES expression .)
    AND             reduce using rule 41 (expression -> expression TIMES expression .)
    OR              reduce using rule 41 (expression -> expression TIMES expression .)
    THEN            reduce using rule 41 (expression -> expression TIMES expression .)
    TO              reduce using rule 41 (expression -> expression TIMES expression .)
    STEP            reduce using rule 41 (expression -> expression TIMES expression .)
    EXP             shift and go to state 59
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! EXP             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! EXACTDIV        [ shift and go to state 56 ]
  ! MOD             [ shift and go to state 57 ]
  ! AS              [ shift and go to state 58 ]


state 106

    (42) expression -> expression DIVIDE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 42 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    EXACTDIV        reduce using rule 42 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 42 (expression -> expression DIVIDE expression .)
    AS              reduce using rule 42 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 42 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 42 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 42 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 42 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 42 (expression -> expression DIVIDE expression .)
    EQUAL_GREATER_THAN reduce using rule 42 (expression -> expression DIVIDE expression .)
    EQUAL_LESS_THAN reduce using rule 42 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 42 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 42 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 42 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 42 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 42 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 42 (expression -> expression DIVIDE expression .)
    STEP            reduce using rule 42 (expression -> expression DIVIDE expression .)
    EXP             shift and go to state 59
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! EXP             [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! EXACTDIV        [ shift and go to state 56 ]
  ! MOD             [ shift and go to state 57 ]
  ! AS              [ shift and go to state 58 ]


state 107

    (43) expression -> expression EXACTDIV expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 43 (expression -> expression EXACTDIV expression .)
    MINUS           reduce using rule 43 (expression -> expression EXACTDIV expression .)
    TIMES           reduce using rule 43 (expression -> expression EXACTDIV expression .)
    DIVIDE          reduce using rule 43 (expression -> expression EXACTDIV expression .)
    EXACTDIV        reduce using rule 43 (expression -> expression EXACTDIV expression .)
    MOD             reduce using rule 43 (expression -> expression EXACTDIV expression .)
    AS              reduce using rule 43 (expression -> expression EXACTDIV expression .)
    COLON           reduce using rule 43 (expression -> expression EXACTDIV expression .)
    $end            reduce using rule 43 (expression -> expression EXACTDIV expression .)
    COMMA           reduce using rule 43 (expression -> expression EXACTDIV expression .)
    RPAREN          reduce using rule 43 (expression -> expression EXACTDIV expression .)
    GREATER_THAN    reduce using rule 43 (expression -> expression EXACTDIV expression .)
    LESS_THAN       reduce using rule 43 (expression -> expression EXACTDIV expression .)
    EQUAL_GREATER_THAN reduce using rule 43 (expression -> expression EXACTDIV expression .)
    EQUAL_LESS_THAN reduce using rule 43 (expression -> expression EXACTDIV expression .)
    EQUALS          reduce using rule 43 (expression -> expression EXACTDIV expression .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression EXACTDIV expression .)
    RBRACE          reduce using rule 43 (expression -> expression EXACTDIV expression .)
    AND             reduce using rule 43 (expression -> expression EXACTDIV expression .)
    OR              reduce using rule 43 (expression -> expression EXACTDIV expression .)
    THEN            reduce using rule 43 (expression -> expression EXACTDIV expression .)
    TO              reduce using rule 43 (expression -> expression EXACTDIV expression .)
    STEP            reduce using rule 43 (expression -> expression EXACTDIV expression .)
    EXP             shift and go to state 59
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 43 (expression -> expression EXACTDIV expression .) ]
  ! EXP             [ reduce using rule 43 (expression -> expression EXACTDIV expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! EXACTDIV        [ shift and go to state 56 ]
  ! MOD             [ shift and go to state 57 ]
  ! AS              [ shift and go to state 58 ]


state 108

    (44) expression -> expression MOD expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 44 (expression -> expression MOD expression .)
    MINUS           reduce using rule 44 (expression -> expression MOD expression .)
    TIMES           reduce using rule 44 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 44 (expression -> expression MOD expression .)
    EXACTDIV        reduce using rule 44 (expression -> expression MOD expression .)
    MOD             reduce using rule 44 (expression -> expression MOD expression .)
    AS              reduce using rule 44 (expression -> expression MOD expression .)
    COLON           reduce using rule 44 (expression -> expression MOD expression .)
    $end            reduce using rule 44 (expression -> expression MOD expression .)
    COMMA           reduce using rule 44 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 44 (expression -> expression MOD expression .)
    GREATER_THAN    reduce using rule 44 (expression -> expression MOD expression .)
    LESS_THAN       reduce using rule 44 (expression -> expression MOD expression .)
    EQUAL_GREATER_THAN reduce using rule 44 (expression -> expression MOD expression .)
    EQUAL_LESS_THAN reduce using rule 44 (expression -> expression MOD expression .)
    EQUALS          reduce using rule 44 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 44 (expression -> expression MOD expression .)
    AND             reduce using rule 44 (expression -> expression MOD expression .)
    OR              reduce using rule 44 (expression -> expression MOD expression .)
    THEN            reduce using rule 44 (expression -> expression MOD expression .)
    TO              reduce using rule 44 (expression -> expression MOD expression .)
    STEP            reduce using rule 44 (expression -> expression MOD expression .)
    EXP             shift and go to state 59
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 44 (expression -> expression MOD expression .) ]
  ! EXP             [ reduce using rule 44 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! EXACTDIV        [ shift and go to state 56 ]
  ! MOD             [ shift and go to state 57 ]
  ! AS              [ shift and go to state 58 ]


state 109

    (45) expression -> expression AS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    AS              reduce using rule 45 (expression -> expression AS expression .)
    COLON           reduce using rule 45 (expression -> expression AS expression .)
    $end            reduce using rule 45 (expression -> expression AS expression .)
    COMMA           reduce using rule 45 (expression -> expression AS expression .)
    RPAREN          reduce using rule 45 (expression -> expression AS expression .)
    GREATER_THAN    reduce using rule 45 (expression -> expression AS expression .)
    LESS_THAN       reduce using rule 45 (expression -> expression AS expression .)
    EQUAL_GREATER_THAN reduce using rule 45 (expression -> expression AS expression .)
    EQUAL_LESS_THAN reduce using rule 45 (expression -> expression AS expression .)
    EQUALS          reduce using rule 45 (expression -> expression AS expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> expression AS expression .)
    RBRACE          reduce using rule 45 (expression -> expression AS expression .)
    AND             reduce using rule 45 (expression -> expression AS expression .)
    OR              reduce using rule 45 (expression -> expression AS expression .)
    THEN            reduce using rule 45 (expression -> expression AS expression .)
    TO              reduce using rule 45 (expression -> expression AS expression .)
    STEP            reduce using rule 45 (expression -> expression AS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    EXP             shift and go to state 59
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! EXACTDIV        [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! EXP             [ reduce using rule 45 (expression -> expression AS expression .) ]
  ! AS              [ shift and go to state 58 ]


state 110

    (46) expression -> expression EXP expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    PLUS            reduce using rule 46 (expression -> expression EXP expression .)
    MINUS           reduce using rule 46 (expression -> expression EXP expression .)
    TIMES           reduce using rule 46 (expression -> expression EXP expression .)
    DIVIDE          reduce using rule 46 (expression -> expression EXP expression .)
    EXACTDIV        reduce using rule 46 (expression -> expression EXP expression .)
    MOD             reduce using rule 46 (expression -> expression EXP expression .)
    AS              reduce using rule 46 (expression -> expression EXP expression .)
    EXP             reduce using rule 46 (expression -> expression EXP expression .)
    COLON           reduce using rule 46 (expression -> expression EXP expression .)
    $end            reduce using rule 46 (expression -> expression EXP expression .)
    COMMA           reduce using rule 46 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 46 (expression -> expression EXP expression .)
    GREATER_THAN    reduce using rule 46 (expression -> expression EXP expression .)
    LESS_THAN       reduce using rule 46 (expression -> expression EXP expression .)
    EQUAL_GREATER_THAN reduce using rule 46 (expression -> expression EXP expression .)
    EQUAL_LESS_THAN reduce using rule 46 (expression -> expression EXP expression .)
    EQUALS          reduce using rule 46 (expression -> expression EXP expression .)
    NOT_EQUAL       reduce using rule 46 (expression -> expression EXP expression .)
    RBRACE          reduce using rule 46 (expression -> expression EXP expression .)
    AND             reduce using rule 46 (expression -> expression EXP expression .)
    OR              reduce using rule 46 (expression -> expression EXP expression .)
    THEN            reduce using rule 46 (expression -> expression EXP expression .)
    TO              reduce using rule 46 (expression -> expression EXP expression .)
    STEP            reduce using rule 46 (expression -> expression EXP expression .)
    DOT             shift and go to state 112

  ! DOT             [ reduce using rule 46 (expression -> expression EXP expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! EXACTDIV        [ shift and go to state 56 ]
  ! MOD             [ shift and go to state 57 ]
  ! AS              [ shift and go to state 58 ]
  ! EXP             [ shift and go to state 59 ]


state 111

    (64) statement -> SELECT CASE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 64 (statement -> SELECT CASE expression .)
    $end            reduce using rule 64 (statement -> SELECT CASE expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 112

    (47) expression -> expression DOT . ID

    ID              shift and go to state 143


state 113

    (50) expression -> ID LPAREN . RPAREN
    (51) expression -> ID LPAREN . args_list RPAREN
    (17) args_list -> . args_list COMMA expression
    (18) args_list -> . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    RPAREN          shift and go to state 116
    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    args_list                      shift and go to state 117
    expression                     shift and go to state 67

state 114

    (23) assignment -> ID EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 23 (assignment -> ID EQUALS expression .)
    $end            reduce using rule 23 (assignment -> ID EQUALS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 115

    (25) assignment -> ID LPAREN expression . RPAREN EQUALS expression
    (49) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID
    (18) args_list -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 144
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112
    COMMA           reduce using rule 18 (args_list -> expression .)

  ! RPAREN          [ reduce using rule 18 (args_list -> expression .) ]


state 116

    (50) expression -> ID LPAREN RPAREN .

    DOT             reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    EXACTDIV        reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    MOD             reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    AS              reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    EXP             reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    COLON           reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    $end            reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    EQUAL_LESS_THAN reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    AND             reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    OR              reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    THEN            reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    TO              reduce using rule 50 (expression -> ID LPAREN RPAREN .)
    STEP            reduce using rule 50 (expression -> ID LPAREN RPAREN .)


state 117

    (51) expression -> ID LPAREN args_list . RPAREN
    (17) args_list -> args_list . COMMA expression

    RPAREN          shift and go to state 145
    COMMA           shift and go to state 118


state 118

    (17) args_list -> args_list COMMA . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 146

state 119

    (24) assignment -> LET ID EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 147

state 120

    (49) expression -> LPAREN expression RPAREN .

    DOT             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EXACTDIV        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AS              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQUAL_LESS_THAN reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    STEP            reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 121

    (35) rel_expression -> rel_expression AND . rel_expression
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 148
    expression                     shift and go to state 76

state 122

    (36) rel_expression -> rel_expression OR . rel_expression
    (29) rel_expression -> . expression GREATER_THAN expression
    (30) rel_expression -> . expression LESS_THAN expression
    (31) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (32) rel_expression -> . expression EQUAL_LESS_THAN expression
    (33) rel_expression -> . expression EQUALS expression
    (34) rel_expression -> . expression NOT_EQUAL expression
    (35) rel_expression -> . rel_expression AND rel_expression
    (36) rel_expression -> . rel_expression OR rel_expression
    (37) rel_expression -> . LPAREN rel_expression RPAREN
    (38) rel_expression -> . NOT rel_expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    MINUS           shift and go to state 32
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    rel_expression                 shift and go to state 149
    expression                     shift and go to state 76

state 123

    (29) rel_expression -> expression GREATER_THAN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 150

state 124

    (30) rel_expression -> expression LESS_THAN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 151

state 125

    (31) rel_expression -> expression EQUAL_GREATER_THAN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 152

state 126

    (32) rel_expression -> expression EQUAL_LESS_THAN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 153

state 127

    (33) rel_expression -> expression EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 154

state 128

    (34) rel_expression -> expression NOT_EQUAL . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 155

state 129

    (37) rel_expression -> LPAREN rel_expression . RPAREN
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    RPAREN          shift and go to state 156
    AND             shift and go to state 121
    OR              shift and go to state 122


state 130

    (49) expression -> LPAREN expression . RPAREN
    (29) rel_expression -> expression . GREATER_THAN expression
    (30) rel_expression -> expression . LESS_THAN expression
    (31) rel_expression -> expression . EQUAL_GREATER_THAN expression
    (32) rel_expression -> expression . EQUAL_LESS_THAN expression
    (33) rel_expression -> expression . EQUALS expression
    (34) rel_expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    RPAREN          shift and go to state 120
    GREATER_THAN    shift and go to state 123
    LESS_THAN       shift and go to state 124
    EQUAL_GREATER_THAN shift and go to state 125
    EQUAL_LESS_THAN shift and go to state 126
    EQUALS          shift and go to state 127
    NOT_EQUAL       shift and go to state 128
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 131

    (38) rel_expression -> NOT rel_expression .
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 38 (rel_expression -> NOT rel_expression .)
    OR              reduce using rule 38 (rel_expression -> NOT rel_expression .)
    COLON           reduce using rule 38 (rel_expression -> NOT rel_expression .)
    $end            reduce using rule 38 (rel_expression -> NOT rel_expression .)
    THEN            reduce using rule 38 (rel_expression -> NOT rel_expression .)
    RPAREN          reduce using rule 38 (rel_expression -> NOT rel_expression .)

  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]


state 132

    (70) for_block_begin -> FOR ID EQUALS . expression TO expression
    (71) for_block_begin -> FOR ID EQUALS . expression TO expression STEP expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 157

state 133

    (21) defun_statement -> DEFUN ID LPAREN . params_list RPAREN EQUALS expression
    (19) params_list -> . params_list COMMA ID
    (20) params_list -> . ID

    ID              shift and go to state 158

    params_list                    shift and go to state 159

state 134

    (56) expression -> LBRACE args_list RBRACE .

    DOT             reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    PLUS            reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    MINUS           reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    TIMES           reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    DIVIDE          reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    EXACTDIV        reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    MOD             reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    AS              reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    EXP             reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    COLON           reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    $end            reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    COMMA           reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    RPAREN          reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    GREATER_THAN    reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    LESS_THAN       reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    EQUAL_GREATER_THAN reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    EQUAL_LESS_THAN reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    EQUALS          reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    NOT_EQUAL       reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    RBRACE          reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    AND             reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    OR              reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    THEN            reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    TO              reduce using rule 56 (expression -> LBRACE args_list RBRACE .)
    STEP            reduce using rule 56 (expression -> LBRACE args_list RBRACE .)


state 135

    (61) if_block_begin -> IF rel_expression THEN .

    COLON           reduce using rule 61 (if_block_begin -> IF rel_expression THEN .)
    $end            reduce using rule 61 (if_block_begin -> IF rel_expression THEN .)


state 136

    (83) block_end -> LOOP WHILE rel_expression .
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 83 (block_end -> LOOP WHILE rel_expression .)
    $end            reduce using rule 83 (block_end -> LOOP WHILE rel_expression .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 137

    (84) block_end -> LOOP UNTIL rel_expression .
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 84 (block_end -> LOOP UNTIL rel_expression .)
    $end            reduce using rule 84 (block_end -> LOOP UNTIL rel_expression .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 138

    (72) function_block_begin -> SUB ID LPAREN . params_list RPAREN
    (74) function_block_begin -> SUB ID LPAREN . RPAREN
    (19) params_list -> . params_list COMMA ID
    (20) params_list -> . ID

    RPAREN          shift and go to state 161
    ID              shift and go to state 158

    params_list                    shift and go to state 160

state 139

    (73) function_block_begin -> FUNCTION ID LPAREN . params_list RPAREN
    (75) function_block_begin -> FUNCTION ID LPAREN . RPAREN
    (19) params_list -> . params_list COMMA ID
    (20) params_list -> . ID

    RPAREN          shift and go to state 163
    ID              shift and go to state 158

    params_list                    shift and go to state 162

state 140

    (63) elseif_block_begin -> ELSEIF rel_expression THEN .

    COLON           reduce using rule 63 (elseif_block_begin -> ELSEIF rel_expression THEN .)
    $end            reduce using rule 63 (elseif_block_begin -> ELSEIF rel_expression THEN .)


state 141

    (28) declare_array -> DIM ID LPAREN . expression RPAREN AS ID
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 164

state 142

    (26) assignment -> expression DOT ID EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 165

state 143

    (47) expression -> expression DOT ID .

    PLUS            reduce using rule 47 (expression -> expression DOT ID .)
    MINUS           reduce using rule 47 (expression -> expression DOT ID .)
    TIMES           reduce using rule 47 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 47 (expression -> expression DOT ID .)
    EXACTDIV        reduce using rule 47 (expression -> expression DOT ID .)
    MOD             reduce using rule 47 (expression -> expression DOT ID .)
    AS              reduce using rule 47 (expression -> expression DOT ID .)
    EXP             reduce using rule 47 (expression -> expression DOT ID .)
    DOT             reduce using rule 47 (expression -> expression DOT ID .)
    COLON           reduce using rule 47 (expression -> expression DOT ID .)
    $end            reduce using rule 47 (expression -> expression DOT ID .)
    COMMA           reduce using rule 47 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 47 (expression -> expression DOT ID .)
    GREATER_THAN    reduce using rule 47 (expression -> expression DOT ID .)
    LESS_THAN       reduce using rule 47 (expression -> expression DOT ID .)
    EQUAL_GREATER_THAN reduce using rule 47 (expression -> expression DOT ID .)
    EQUAL_LESS_THAN reduce using rule 47 (expression -> expression DOT ID .)
    EQUALS          reduce using rule 47 (expression -> expression DOT ID .)
    NOT_EQUAL       reduce using rule 47 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 47 (expression -> expression DOT ID .)
    AND             reduce using rule 47 (expression -> expression DOT ID .)
    OR              reduce using rule 47 (expression -> expression DOT ID .)
    THEN            reduce using rule 47 (expression -> expression DOT ID .)
    TO              reduce using rule 47 (expression -> expression DOT ID .)
    STEP            reduce using rule 47 (expression -> expression DOT ID .)


state 144

    (25) assignment -> ID LPAREN expression RPAREN . EQUALS expression
    (49) expression -> LPAREN expression RPAREN .

    EQUALS          shift and go to state 166
    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EXACTDIV        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AS              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 145

    (51) expression -> ID LPAREN args_list RPAREN .

    DOT             reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    PLUS            reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    MINUS           reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    TIMES           reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    EXACTDIV        reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    MOD             reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    AS              reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    EXP             reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    COLON           reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    $end            reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    COMMA           reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    RPAREN          reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    GREATER_THAN    reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    LESS_THAN       reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    EQUAL_LESS_THAN reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    EQUALS          reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    NOT_EQUAL       reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    RBRACE          reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    AND             reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    OR              reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    THEN            reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    TO              reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)
    STEP            reduce using rule 51 (expression -> ID LPAREN args_list RPAREN .)


state 146

    (17) args_list -> args_list COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COMMA           reduce using rule 17 (args_list -> args_list COMMA expression .)
    COLON           reduce using rule 17 (args_list -> args_list COMMA expression .)
    $end            reduce using rule 17 (args_list -> args_list COMMA expression .)
    RBRACE          reduce using rule 17 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 17 (args_list -> args_list COMMA expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 147

    (24) assignment -> LET ID EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 24 (assignment -> LET ID EQUALS expression .)
    $end            reduce using rule 24 (assignment -> LET ID EQUALS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 148

    (35) rel_expression -> rel_expression AND rel_expression .
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 35 (rel_expression -> rel_expression AND rel_expression .)
    OR              reduce using rule 35 (rel_expression -> rel_expression AND rel_expression .)
    COLON           reduce using rule 35 (rel_expression -> rel_expression AND rel_expression .)
    $end            reduce using rule 35 (rel_expression -> rel_expression AND rel_expression .)
    THEN            reduce using rule 35 (rel_expression -> rel_expression AND rel_expression .)
    RPAREN          reduce using rule 35 (rel_expression -> rel_expression AND rel_expression .)

  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]


state 149

    (36) rel_expression -> rel_expression OR rel_expression .
    (35) rel_expression -> rel_expression . AND rel_expression
    (36) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 36 (rel_expression -> rel_expression OR rel_expression .)
    OR              reduce using rule 36 (rel_expression -> rel_expression OR rel_expression .)
    COLON           reduce using rule 36 (rel_expression -> rel_expression OR rel_expression .)
    $end            reduce using rule 36 (rel_expression -> rel_expression OR rel_expression .)
    THEN            reduce using rule 36 (rel_expression -> rel_expression OR rel_expression .)
    RPAREN          reduce using rule 36 (rel_expression -> rel_expression OR rel_expression .)

  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]


state 150

    (29) rel_expression -> expression GREATER_THAN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    AND             reduce using rule 29 (rel_expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 29 (rel_expression -> expression GREATER_THAN expression .)
    COLON           reduce using rule 29 (rel_expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 29 (rel_expression -> expression GREATER_THAN expression .)
    THEN            reduce using rule 29 (rel_expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 29 (rel_expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 151

    (30) rel_expression -> expression LESS_THAN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    AND             reduce using rule 30 (rel_expression -> expression LESS_THAN expression .)
    OR              reduce using rule 30 (rel_expression -> expression LESS_THAN expression .)
    COLON           reduce using rule 30 (rel_expression -> expression LESS_THAN expression .)
    $end            reduce using rule 30 (rel_expression -> expression LESS_THAN expression .)
    THEN            reduce using rule 30 (rel_expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 30 (rel_expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 152

    (31) rel_expression -> expression EQUAL_GREATER_THAN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    AND             reduce using rule 31 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    OR              reduce using rule 31 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    COLON           reduce using rule 31 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    $end            reduce using rule 31 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    THEN            reduce using rule 31 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    RPAREN          reduce using rule 31 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 153

    (32) rel_expression -> expression EQUAL_LESS_THAN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    AND             reduce using rule 32 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    OR              reduce using rule 32 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    COLON           reduce using rule 32 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    $end            reduce using rule 32 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    THEN            reduce using rule 32 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    RPAREN          reduce using rule 32 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 154

    (33) rel_expression -> expression EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    AND             reduce using rule 33 (rel_expression -> expression EQUALS expression .)
    OR              reduce using rule 33 (rel_expression -> expression EQUALS expression .)
    COLON           reduce using rule 33 (rel_expression -> expression EQUALS expression .)
    $end            reduce using rule 33 (rel_expression -> expression EQUALS expression .)
    THEN            reduce using rule 33 (rel_expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 33 (rel_expression -> expression EQUALS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 155

    (34) rel_expression -> expression NOT_EQUAL expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    AND             reduce using rule 34 (rel_expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 34 (rel_expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 34 (rel_expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 34 (rel_expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 34 (rel_expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 34 (rel_expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 156

    (37) rel_expression -> LPAREN rel_expression RPAREN .

    AND             reduce using rule 37 (rel_expression -> LPAREN rel_expression RPAREN .)
    OR              reduce using rule 37 (rel_expression -> LPAREN rel_expression RPAREN .)
    COLON           reduce using rule 37 (rel_expression -> LPAREN rel_expression RPAREN .)
    $end            reduce using rule 37 (rel_expression -> LPAREN rel_expression RPAREN .)
    THEN            reduce using rule 37 (rel_expression -> LPAREN rel_expression RPAREN .)
    RPAREN          reduce using rule 37 (rel_expression -> LPAREN rel_expression RPAREN .)


state 157

    (70) for_block_begin -> FOR ID EQUALS expression . TO expression
    (71) for_block_begin -> FOR ID EQUALS expression . TO expression STEP expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    TO              shift and go to state 167
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 158

    (20) params_list -> ID .

    RPAREN          reduce using rule 20 (params_list -> ID .)
    COMMA           reduce using rule 20 (params_list -> ID .)


state 159

    (21) defun_statement -> DEFUN ID LPAREN params_list . RPAREN EQUALS expression
    (19) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 168
    COMMA           shift and go to state 169


state 160

    (72) function_block_begin -> SUB ID LPAREN params_list . RPAREN
    (19) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 170
    COMMA           shift and go to state 169


state 161

    (74) function_block_begin -> SUB ID LPAREN RPAREN .

    COLON           reduce using rule 74 (function_block_begin -> SUB ID LPAREN RPAREN .)
    $end            reduce using rule 74 (function_block_begin -> SUB ID LPAREN RPAREN .)


state 162

    (73) function_block_begin -> FUNCTION ID LPAREN params_list . RPAREN
    (19) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 171
    COMMA           shift and go to state 169


state 163

    (75) function_block_begin -> FUNCTION ID LPAREN RPAREN .

    COLON           reduce using rule 75 (function_block_begin -> FUNCTION ID LPAREN RPAREN .)
    $end            reduce using rule 75 (function_block_begin -> FUNCTION ID LPAREN RPAREN .)


state 164

    (28) declare_array -> DIM ID LPAREN expression . RPAREN AS ID
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    RPAREN          shift and go to state 172
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 165

    (26) assignment -> expression DOT ID EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 26 (assignment -> expression DOT ID EQUALS expression .)
    $end            reduce using rule 26 (assignment -> expression DOT ID EQUALS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 166

    (25) assignment -> ID LPAREN expression RPAREN EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 173

state 167

    (70) for_block_begin -> FOR ID EQUALS expression TO . expression
    (71) for_block_begin -> FOR ID EQUALS expression TO . expression STEP expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 174

state 168

    (21) defun_statement -> DEFUN ID LPAREN params_list RPAREN . EQUALS expression

    EQUALS          shift and go to state 175


state 169

    (19) params_list -> params_list COMMA . ID

    ID              shift and go to state 176


state 170

    (72) function_block_begin -> SUB ID LPAREN params_list RPAREN .

    COLON           reduce using rule 72 (function_block_begin -> SUB ID LPAREN params_list RPAREN .)
    $end            reduce using rule 72 (function_block_begin -> SUB ID LPAREN params_list RPAREN .)


state 171

    (73) function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .

    COLON           reduce using rule 73 (function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .)
    $end            reduce using rule 73 (function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .)


state 172

    (28) declare_array -> DIM ID LPAREN expression RPAREN . AS ID

    AS              shift and go to state 177


state 173

    (25) assignment -> ID LPAREN expression RPAREN EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 25 (assignment -> ID LPAREN expression RPAREN EQUALS expression .)
    $end            reduce using rule 25 (assignment -> ID LPAREN expression RPAREN EQUALS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 174

    (70) for_block_begin -> FOR ID EQUALS expression TO expression .
    (71) for_block_begin -> FOR ID EQUALS expression TO expression . STEP expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 70 (for_block_begin -> FOR ID EQUALS expression TO expression .)
    $end            reduce using rule 70 (for_block_begin -> FOR ID EQUALS expression TO expression .)
    STEP            shift and go to state 178
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 175

    (21) defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 179

state 176

    (19) params_list -> params_list COMMA ID .

    RPAREN          reduce using rule 19 (params_list -> params_list COMMA ID .)
    COMMA           reduce using rule 19 (params_list -> params_list COMMA ID .)


state 177

    (28) declare_array -> DIM ID LPAREN expression RPAREN AS . ID

    ID              shift and go to state 180


state 178

    (71) for_block_begin -> FOR ID EQUALS expression TO expression STEP . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression EXACTDIV expression
    (44) expression -> . expression MOD expression
    (45) expression -> . expression AS expression
    (46) expression -> . expression EXP expression
    (47) expression -> . expression DOT ID
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN RPAREN
    (51) expression -> . ID LPAREN args_list RPAREN
    (52) expression -> . INTEGER
    (53) expression -> . DECIMAL
    (54) expression -> . STRING
    (55) expression -> . ID
    (56) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 32
    LPAREN          shift and go to state 22
    ID              shift and go to state 62
    INTEGER         shift and go to state 33
    DECIMAL         shift and go to state 34
    STRING          shift and go to state 35
    LBRACE          shift and go to state 36

    expression                     shift and go to state 181

state 179

    (21) defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 21 (defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .)
    $end            reduce using rule 21 (defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112


state 180

    (28) declare_array -> DIM ID LPAREN expression RPAREN AS ID .

    COLON           reduce using rule 28 (declare_array -> DIM ID LPAREN expression RPAREN AS ID .)
    $end            reduce using rule 28 (declare_array -> DIM ID LPAREN expression RPAREN AS ID .)


state 181

    (71) for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . EXACTDIV expression
    (44) expression -> expression . MOD expression
    (45) expression -> expression . AS expression
    (46) expression -> expression . EXP expression
    (47) expression -> expression . DOT ID

    COLON           reduce using rule 71 (for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .)
    $end            reduce using rule 71 (for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    EXACTDIV        shift and go to state 56
    MOD             shift and go to state 57
    AS              shift and go to state 58
    EXP             shift and go to state 59
    DOT             shift and go to state 112

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 20 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 115 resolved as shift
